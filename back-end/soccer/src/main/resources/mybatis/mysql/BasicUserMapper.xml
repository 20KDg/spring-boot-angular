<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dqv5.soccer.dao.BasicUserMapper">
    <resultMap id="BaseResultMap" type="com.dqv5.soccer.entity.BasicUser">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="last_password_reset_time" property="lastPasswordResetTime" jdbcType="TIMESTAMP"/>
        <result column="last_modified_time" property="lastModifiedTime" jdbcType="TIMESTAMP"/>
        <collection property="roles" column="id" select="com.dqv5.soccer.dao.SysRoleMapper.findListByUser"></collection>
    </resultMap>

    <select id="findAllByOrderById" resultMap="BaseResultMap">
        SELECT * FROM basic_user order by id
    </select>
    <select id="findByAccount" parameterType="string" resultMap="BaseResultMap">
        SELECT * FROM basic_user where account = #{account}
    </select>
    <select id="findOne" parameterType="int" resultMap="BaseResultMap">
        SELECT * FROM basic_user where id = #{id}
    </select>
    <insert id="insert" parameterType="com.dqv5.soccer.entity.BasicUser" useGeneratedKeys="true" keyProperty="id">
        insert into basic_user(account,password,avatar_url,gender,phone,status,user_name,mod_user_id,
          last_modified_time
        ) values (#{account},#{password},#{avatarUrl},#{gender},#{phone},#{status},#{userName},#{modUser.userId},now())
    </insert>
    <update id="updateUserInfo" parameterType="com.dqv5.soccer.entity.BasicUser">
        update basic_user
        <set>
            <if test="account!=null">account = #{account} ,</if>
            <if test="status!=null">status = #{status} ,</if>
            <if test="userName!=null">user_name = #{userName} ,</if>
            <if test="modUser!=null &amp;&amp; modUser.userId!=null">modUserId = #{modUser.userId} ,</if>
            gender = #{gender} ,
            phone = #{phone} ,
            last_modified_time = now()
        </set>
        where id = #{id}
    </update>
    <update id="updatePassword" parameterType="com.dqv5.soccer.entity.BasicUser">
        update basic_user
        <set>
            <if test="modUser!=null&amp;&amp;modUser.id!=null">mod_user_id = #{modUser.id}</if>
            password = #{password},
            last_modified_time = now(),
            last_password_reset_time = now()
        </set>
        where id = #{id}
    </update>
    <delete id="delete" parameterType="int">
         delete  FROM basic_user where id = #{id}
    </delete>

    <insert id="insertUserRole" parameterType="com.dqv5.soccer.entity.BasicUserRole" useGeneratedKeys="true"
            keyProperty="id">
        insert into basic_user_role(user_id,role_id)
        values (#{userId},#{roleId})
    </insert>
    <delete id="deleteUserRoles" parameterType="int">
         delete  FROM basic_user_role where user_id = #{userId}
    </delete>

</mapper>
